<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.wanbang">
		<!-- Spring不扫描Controller 和  ControllerAdvice注解 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${mysql.driver}"></property>
		<property name="jdbcUrl" value="${mysql.url}"></property>
		<property name="user" value="${mysql.user}"></property>
		<property name="password" value="${mysql.password}"></property>
		<property name="maxPoolSize" value="${mysql.maxSize}"></property>
		<property name="initialPoolSize" value="${mysql.initSize}"></property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 
		启用事务注解 
			- 默认情况下，事务注解会使用IOC容器中名称为transactionManager的bean，如果不存在，则保存
			- 我们也可以配置事务注解使用IOC容器中bean的名称
				- transaction-manager ： 配置具体的事务管理器的bean名称
			- 约定大于配置大于编码
	-->
	<tx:annotation-driven/>
	
	<!-- 配置myBatis : 将SQLSessionFactoryBean 配置进IOC容器 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property> <!-- 配置引用的数据源 -->
		<property name="configLocation" value="classpath:MyBatis-conf.xml"></property><!-- 加载MyBatis的全局配置文件 -->
		<property name="mapperLocations" value="classpath:com/wanbangee/dao/*.xml"></property><!-- 注册sql映射文件 -->
		<!-- 所有的MyBatis全局配置文件中的配置，都可以在此处完成 -->
	</bean>
	
	<!-- Dao代理实现类作为Spring IOC容器中的bean 被IOC容器管理 -->
	<mybatis-spring:scan base-package="com.wanbangee.dao"/>
	
	<!-- Old:Dao代理实现类作为Spring IOC容器中的bean 被IOC容器管理  -->
	<!-- <bean id="configure" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="com.wanbangee.dao"></property>
    </bean> -->
</beans>
